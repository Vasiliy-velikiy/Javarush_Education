package TinkiffTasks;

import JavaRushLevel24.MarkerInterfaceTest3;



/*На физкультуре происходит разбиение по двум командам. Ребята выстроены в шеренгу, у каждого из них есть свой рост
 a_ia

 Разбиение по командам произойдет по принципу «четный-нечетный» — все школьники с четным ростом отправляются в одну команду,
  а нечетные — в другую.

В отличие от привычного урока, ребята не выстроились по росту. Вместо привычного порядка они встали случайно.
Теперь физрук Яша смотрит на шеренгу и думает — может ли ровно одна пара учеников поменяться местами так,
чтобы команды оказались такими же, как и по принципу «первый-второй». Иначе говоря, он хочет получить такой порядок,
при котором все ученики с четным ростом стоят на четных позициях, а с нечетным — на нечетных.

Помогите Яше найти нужную замену.


Формат входных данных

В первой строке находится число n (2 <= n <= 1000)— количество учеников в шеренге.

В следующей строке находится n натуральных чисел a_i(1<= a_i <= 10^9) — рост учеников.

Формат выходных данных
В единственной строке выведите i и j — номера элементов, которые нужно поменять местами, чтобы добиться заданного
 условия (1 <= i , j <= n , i <>j) Если ответов несколько — разрешается вывести любой.

Если не существует способа поменять два элемента местами — выведите -1 -1


Замечания

В первом примере хотя бы один ученик с четным ростом будет стоять на нечетной позиции.
Во втором тесте замена приведет к неправильному состоянию.

В третьем тесте из условия замена приведет шеренгу к валидному состоянию [1,2].

Примеры данных
Пример 1
4
2  1  4  6
вывод
-1  -1
Пример 2
2
1  2
вывод
-1  -1
Пример 3
2
2  1
вывод
1  2
Решение
В задаче требовалось найти все позиции учеников, которые имеют четный рост и стоят на нечетном месте, а также найти все
позиции учеников, которые имеют нечетный рост и стоят на четном
месте. Все эти ученики стояли не на своих местах. Ребята с четным ростом хотят попасть на нечетную позицию, а ребята с
 нечетным — на четную. Значит, если размеры обоих списков равны единице,
то искомая замена возможна. Иначе — ответ «Нет»
*/

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
public class Task6 {
    public static void main(String[] args) {
        Scanner scanner=new Scanner(System.in);

        int pupils=Integer.parseInt(scanner.nextLine());
        String s=scanner.nextLine();
        String[]strings=s.split(" ");
        int []growt_hpupils=new int[strings.length];
        
        for (int i = 0; i <strings.length ; i++) { //рост преобразую в число 
            growt_hpupils[i]=Integer.parseInt(strings[i]);
        }
        List<Integer>chet=new ArrayList<>();
        List<Integer>nechet=new ArrayList<>();
        for (int i = 0; i <growt_hpupils.length ; i++) {
            if (growt_hpupils[i]%2==0&&(i+1)%2!=0) chet.add(growt_hpupils[i]);//четный рост и стоят на нечетном месте
           if (growt_hpupils[i]%2!=0&&(i+1)%2==0) nechet.add(growt_hpupils[i]);

           // else nechet.add(growt_hpupils[i]); //нечетный рост и на четном месте
        }

        //System.out.println(chet);
      //  System.out.println(nechet);

        int a=0;
        int b=0;
        if(chet.size()==1&&nechet.size()==1){
            for (int i = 0; i <growt_hpupils.length ; i++) {
                if (growt_hpupils[i]==chet.get(0)) a=i;
                if (growt_hpupils[i]==nechet.get(0)) b=i;

            }
            System.out.println((++a)+" "+(++b));
        } else System.out.println("-1 -1");


    }
}
